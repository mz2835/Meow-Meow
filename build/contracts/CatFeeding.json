{
  "contractName": "CatFeeding",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "catId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        }
      ],
      "name": "NewCat",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "buyRandomCat",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "catCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "catFeedTimes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "catPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "catToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cats",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "winCount",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "hairBall",
          "type": "uint16"
        },
        {
          "internalType": "uint32",
          "name": "level",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "readyTime",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "changeCatPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_catId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        }
      ],
      "name": "changeDna",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_catId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_newName",
          "type": "string"
        }
      ],
      "name": "changeName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "coolingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "createRandomCat",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getCatsByOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_catId",
          "type": "uint256"
        }
      ],
      "name": "levelUp",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "levelUpFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setLevelUpFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_catId",
          "type": "uint256"
        }
      ],
      "name": "feed",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"catId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"NewCat\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"buyRandomCat\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"catCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"catFeedTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"catPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"catToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cats\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"winCount\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"hairBall\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"level\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"readyTime\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"changeCatPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_catId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"changeDna\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_catId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newName\",\"type\":\"string\"}],\"name\":\"changeName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coolingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createRandomCat\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_catId\",\"type\":\"uint256\"}],\"name\":\"feed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getCatsByOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_catId\",\"type\":\"uint256\"}],\"name\":\"levelUp\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"levelUpFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setLevelUpFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CatFeeding.sol\":\"CatFeeding\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/CatFactory2.sol\":{\"keccak256\":\"0x91b0db23d8a3150566b41ffa32d5ee6f84edb98e44cc88130ce372a7051ae171\",\"urls\":[\"bzz-raw://8da49a064594f1f6918272f076282e8b87f0314c47634fdf01d284665dd45657\",\"dweb:/ipfs/QmbBtCWYAfavYBUrRiBJaUrcowT3YBgVf6yPPTcuqDBZ8v\"]},\"project:/contracts/CatFeeding.sol\":{\"keccak256\":\"0xce11fd8e0aba9ae9de4c9672fd3a0984981239f13e58e138855256c923fde0a5\",\"urls\":[\"bzz-raw://9b58ecb8575010a38a4b50252d398e91c03b04579886d0d8424bf903897be2de\",\"dweb:/ipfs/QmYQPULpkaR9j75qg6Brb5Vnkby2CnhbE1au2DZP8Ent5G\"]},\"project:/contracts/CatHelper.sol\":{\"keccak256\":\"0x906af83ff08f7c7c62455abb28537d6045f7c5b3c3c511ed863c7c2497cc76f8\",\"urls\":[\"bzz-raw://e2f6b6dfe4e072ed0445efbb79ae13ad0b6e19427cf159042ad0826b5e98da21\",\"dweb:/ipfs/QmPY5zNk2wZmS6g4VPLnSyYLJTDEf2LBbHrwJoJ82H8pAi\"]},\"project:/contracts/Ownable.sol\":{\"keccak256\":\"0xd980d54544afd63ffdf5cec091d0101a48f98525a97c9479c9f2c44a143f85b6\",\"urls\":[\"bzz-raw://42dabb9c94f629043a56daf1d4606f2bfef2b41c7cb08b590c2558d8bc7970b1\",\"dweb:/ipfs/Qmaov5x7FBJ7H4BBLXu6nBTUvxXRdNxt2yS4tQGMwVrhJm\"]},\"project:/contracts/SafeMath.sol\":{\"keccak256\":\"0x13809298aee2598c51c77afb8624c2a2da8ba52c7a514a3ebc20f1ed908e3786\",\"urls\":[\"bzz-raw://d3f8b00df2a6d692d895e8d34def4edab263df727f4bc0f0588153b53b90769d\",\"dweb:/ipfs/QmXCPXWAmHwnxQxMdN5Yn1s2UadjSQdMxhjksSyGxrRwGR\"]}},\"version\":1}",
  "bytecode": "0x60806040526010600155600154600a0a6002556001600355662386f26fc10000600455600060055566038d7ea4c68000600a55336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611a0b806100816000396000f3fe6080604052600436106101095760003560e01c80638da5cb5b11610095578063c6df962d11610064578063c6df962d146105f3578063ccf670f8146106f2578063cda18e341461072d578063f2fde38b1461077c578063f59dfdfb146107cd57610109565b80638da5cb5b1461043b578063c1bab34214610492578063c39cbef114610538578063c4114b12146105c857610109565b8063439c960d116100dc578063439c960d1461029d5780635faf2880146102c8578063600ff8eb1461030d578063710100c4146103d5578063883324151461041057610109565b80630ce90ec21461010e5780632c59a9331461013c5780633aab8dc8146101f75780633ad4c34214610272575b600080fd5b61013a6004803603602081101561012457600080fd5b8101908080359060200190929190505050610808565b005b6101f56004803603602081101561015257600080fd5b810190808035906020019064010000000081111561016f57600080fd5b82018360208201111561018157600080fd5b803590602001918460018302840111640100000000831117156101a357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506108da565b005b34801561020357600080fd5b506102306004803603602081101561021a57600080fd5b81019080803590602001909291905050506109cb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027e57600080fd5b506102876109fe565b6040518082815260200191505060405180910390f35b3480156102a957600080fd5b506102b2610a04565b6040518082815260200191505060405180910390f35b3480156102d457600080fd5b5061030b600480360360408110156102eb57600080fd5b810190808035906020019092919080359060200190929190505050610a0a565b005b34801561031957600080fd5b506103d36004803603602081101561033057600080fd5b810190808035906020019064010000000081111561034d57600080fd5b82018360208201111561035f57600080fd5b8035906020019184600183028401116401000000008311171561038157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610b30565b005b3480156103e157600080fd5b5061040e600480360360208110156103f857600080fd5b8101908080359060200190929190505050610ba6565b005b34801561041c57600080fd5b50610425610c72565b6040518082815260200191505060405180910390f35b34801561044757600080fd5b50610450610c78565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561049e57600080fd5b506104e1600480360360208110156104b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c9d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610524578082015181840152602081019050610509565b505050509050019250505060405180910390f35b34801561054457600080fd5b506105c66004803603604081101561055b57600080fd5b81019080803590602001909291908035906020019064010000000081111561058257600080fd5b82018360208201111561059457600080fd5b803590602001918460018302840111640100000000831117156105b657600080fd5b9091929391929390505050610dca565b005b3480156105d457600080fd5b506105dd610efc565b6040518082815260200191505060405180910390f35b3480156105ff57600080fd5b5061062c6004803603602081101561061657600080fd5b8101908080359060200190929190505050610f02565b60405180806020018781526020018661ffff1661ffff1681526020018561ffff1661ffff1681526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff168152602001828103825288818151815260200191508051906020019080838360005b838110156106b2578082015181840152602081019050610697565b50505050905090810190601f1680156106df5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b3480156106fe57600080fd5b5061072b6004803603602081101561071557600080fd5b810190808035906020019092919050505061101f565b005b34801561073957600080fd5b506107666004803603602081101561075057600080fd5b81019080803590602001909291905050506110eb565b6040518082815260200191505060405180910390f35b34801561078857600080fd5b506107cb6004803603602081101561079f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611103565b005b3480156107d957600080fd5b50610806600480360360208110156107f057600080fd5b8101908080359060200190929190505050611326565b005b600a54341015610880576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f596f75722062616c616e6365206973206e6f7420656e6f75676821000000000081525060200191505060405180910390fd5b6006818154811061088d57fe5b9060005260206000209060040201600201600481819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161092657600080fd5b60045434101561099e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f596f75722062616c616e6365206973206e6f7420656e6f75676821000000000081525060200191505060405180910390fd5b60006109a982611487565b90506001600a82816109b757fe5b0682030190506109c78282611518565b5050565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60035481565b6014828160068281548110610a1b57fe5b906000526020600020906004020160020160049054906101000a900463ffffffff1663ffffffff161015610a9a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806119ae6029913960400191505060405180910390fd5b836007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b0657600080fd5b8360068681548110610b1457fe5b9060005260206000209060040201600101819055505050505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610b7c57600080fd5b6000610b8782611487565b9050600a8181610b9357fe5b0681039050610ba28282611518565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c68576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4d75737420636f6e7472616374206f776e65720000000000000000000000000081525060200191505060405180910390fd5b8060048190555050565b60055481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051908082528060200260200182016040528015610d0e5781602001602082028038833980820191505090505b509050600080905060008090505b600680549050811015610dbf578473ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610db25780838381518110610d9d57fe5b60200260200101818152505081806001019250505b8080600101915050610d1c565b508192505050919050565b6002838160068281548110610ddb57fe5b906000526020600020906004020160020160049054906101000a900463ffffffff1663ffffffff161015610e5a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806119ae6029913960400191505060405180910390fd5b846007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ec657600080fd5b848460068881548110610ed557fe5b90600052602060002090600402016000019190610ef3929190611888565b50505050505050565b600a5481565b60068181548110610f0f57fe5b9060005260206000209060040201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fbb5780601f10610f9057610100808354040283529160200191610fbb565b820191906000526020600020905b815481529060010190602001808311610f9e57829003601f168201915b5050505050908060010154908060020160009054906101000a900461ffff16908060020160029054906101000a900461ffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900463ffffffff16905086565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4d75737420636f6e7472616374206f776e65720000000000000000000000000081525060200191505060405180910390fd5b80600a8190555050565b60096020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4d75737420636f6e7472616374206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611268576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4d75737420636f6e7472616374206f776e65720000000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b806007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461139257600080fd5b6000600683815481106113a157fe5b906000526020600020906004020190506113ba81611803565b6113c357600080fd5b6113ea6001600960008681526020019081526020016000205461182a90919063ffffffff16565b600960008581526020019081526020016000208190555061140a81611846565b6000600160096000868152602001908152602001600020548161142957fe5b061415611482576006838154811061143d57fe5b9060005260206000209060040201600201600281819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff160217905550505b505050565b600060025482426040516020018083805190602001908083835b602083106114c457805182526020820191506020810190506020830392506114a1565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040528051906020012060001c8161151057fe5b069050919050565b6000600160066040518060c00160405280868152602001858152602001600061ffff168152602001600061ffff168152602001600163ffffffff168152602001600063ffffffff168152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906115aa929190611908565b506020820151816001015560408201518160020160006101000a81548161ffff021916908361ffff16021790555060608201518160020160026101000a81548161ffff021916908361ffff16021790555060808201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160020160086101000a81548163ffffffff021916908363ffffffff1602179055505050039050336007600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116f36001600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461182a90919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061174c600160055461182a90919063ffffffff16565b6005819055507fa6d701777246a1c406210d4b4af8683b00ad9a41b469546e5fb3e91c5e65808c8184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156117c25780820151818401526020810190506117a7565b50505050905090810190601f1680156117ef5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b60008160020160089054906101000a900463ffffffff1663ffffffff164210159050919050565b60008082840190508381101561183c57fe5b8091505092915050565b62015180600354420163ffffffff168161185c57fe5b066003544201038160020160086101000a81548163ffffffff021916908363ffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106118c957803560ff19168380011785556118f7565b828001600101855582156118f7579182015b828111156118f65782358255916020019190600101906118db565b5b5090506119049190611988565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061194957805160ff1916838001178555611977565b82800160010185558215611977579182015b8281111561197657825182559160200191906001019061195b565b5b5090506119849190611988565b5090565b6119aa91905b808211156119a657600081600090555060010161198e565b5090565b9056fe596f7572206c6576656c206973206e6f7420656e6f7567682c20706c65617365207570677261646521a265627a7a72315820aa77956602152e0f820c2ae200f723dbda62e9f757cac54295585e0d232f5e6664736f6c63430005100032",
  "deployedBytecode": "0x6080604052600436106101095760003560e01c80638da5cb5b11610095578063c6df962d11610064578063c6df962d146105f3578063ccf670f8146106f2578063cda18e341461072d578063f2fde38b1461077c578063f59dfdfb146107cd57610109565b80638da5cb5b1461043b578063c1bab34214610492578063c39cbef114610538578063c4114b12146105c857610109565b8063439c960d116100dc578063439c960d1461029d5780635faf2880146102c8578063600ff8eb1461030d578063710100c4146103d5578063883324151461041057610109565b80630ce90ec21461010e5780632c59a9331461013c5780633aab8dc8146101f75780633ad4c34214610272575b600080fd5b61013a6004803603602081101561012457600080fd5b8101908080359060200190929190505050610808565b005b6101f56004803603602081101561015257600080fd5b810190808035906020019064010000000081111561016f57600080fd5b82018360208201111561018157600080fd5b803590602001918460018302840111640100000000831117156101a357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506108da565b005b34801561020357600080fd5b506102306004803603602081101561021a57600080fd5b81019080803590602001909291905050506109cb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027e57600080fd5b506102876109fe565b6040518082815260200191505060405180910390f35b3480156102a957600080fd5b506102b2610a04565b6040518082815260200191505060405180910390f35b3480156102d457600080fd5b5061030b600480360360408110156102eb57600080fd5b810190808035906020019092919080359060200190929190505050610a0a565b005b34801561031957600080fd5b506103d36004803603602081101561033057600080fd5b810190808035906020019064010000000081111561034d57600080fd5b82018360208201111561035f57600080fd5b8035906020019184600183028401116401000000008311171561038157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610b30565b005b3480156103e157600080fd5b5061040e600480360360208110156103f857600080fd5b8101908080359060200190929190505050610ba6565b005b34801561041c57600080fd5b50610425610c72565b6040518082815260200191505060405180910390f35b34801561044757600080fd5b50610450610c78565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561049e57600080fd5b506104e1600480360360208110156104b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c9d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610524578082015181840152602081019050610509565b505050509050019250505060405180910390f35b34801561054457600080fd5b506105c66004803603604081101561055b57600080fd5b81019080803590602001909291908035906020019064010000000081111561058257600080fd5b82018360208201111561059457600080fd5b803590602001918460018302840111640100000000831117156105b657600080fd5b9091929391929390505050610dca565b005b3480156105d457600080fd5b506105dd610efc565b6040518082815260200191505060405180910390f35b3480156105ff57600080fd5b5061062c6004803603602081101561061657600080fd5b8101908080359060200190929190505050610f02565b60405180806020018781526020018661ffff1661ffff1681526020018561ffff1661ffff1681526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff168152602001828103825288818151815260200191508051906020019080838360005b838110156106b2578082015181840152602081019050610697565b50505050905090810190601f1680156106df5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b3480156106fe57600080fd5b5061072b6004803603602081101561071557600080fd5b810190808035906020019092919050505061101f565b005b34801561073957600080fd5b506107666004803603602081101561075057600080fd5b81019080803590602001909291905050506110eb565b6040518082815260200191505060405180910390f35b34801561078857600080fd5b506107cb6004803603602081101561079f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611103565b005b3480156107d957600080fd5b50610806600480360360208110156107f057600080fd5b8101908080359060200190929190505050611326565b005b600a54341015610880576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f596f75722062616c616e6365206973206e6f7420656e6f75676821000000000081525060200191505060405180910390fd5b6006818154811061088d57fe5b9060005260206000209060040201600201600481819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161092657600080fd5b60045434101561099e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f596f75722062616c616e6365206973206e6f7420656e6f75676821000000000081525060200191505060405180910390fd5b60006109a982611487565b90506001600a82816109b757fe5b0682030190506109c78282611518565b5050565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60035481565b6014828160068281548110610a1b57fe5b906000526020600020906004020160020160049054906101000a900463ffffffff1663ffffffff161015610a9a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806119ae6029913960400191505060405180910390fd5b836007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b0657600080fd5b8360068681548110610b1457fe5b9060005260206000209060040201600101819055505050505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610b7c57600080fd5b6000610b8782611487565b9050600a8181610b9357fe5b0681039050610ba28282611518565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c68576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4d75737420636f6e7472616374206f776e65720000000000000000000000000081525060200191505060405180910390fd5b8060048190555050565b60055481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051908082528060200260200182016040528015610d0e5781602001602082028038833980820191505090505b509050600080905060008090505b600680549050811015610dbf578473ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610db25780838381518110610d9d57fe5b60200260200101818152505081806001019250505b8080600101915050610d1c565b508192505050919050565b6002838160068281548110610ddb57fe5b906000526020600020906004020160020160049054906101000a900463ffffffff1663ffffffff161015610e5a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806119ae6029913960400191505060405180910390fd5b846007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ec657600080fd5b848460068881548110610ed557fe5b90600052602060002090600402016000019190610ef3929190611888565b50505050505050565b600a5481565b60068181548110610f0f57fe5b9060005260206000209060040201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fbb5780601f10610f9057610100808354040283529160200191610fbb565b820191906000526020600020905b815481529060010190602001808311610f9e57829003601f168201915b5050505050908060010154908060020160009054906101000a900461ffff16908060020160029054906101000a900461ffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900463ffffffff16905086565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4d75737420636f6e7472616374206f776e65720000000000000000000000000081525060200191505060405180910390fd5b80600a8190555050565b60096020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4d75737420636f6e7472616374206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611268576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4d75737420636f6e7472616374206f776e65720000000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b806007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461139257600080fd5b6000600683815481106113a157fe5b906000526020600020906004020190506113ba81611803565b6113c357600080fd5b6113ea6001600960008681526020019081526020016000205461182a90919063ffffffff16565b600960008581526020019081526020016000208190555061140a81611846565b6000600160096000868152602001908152602001600020548161142957fe5b061415611482576006838154811061143d57fe5b9060005260206000209060040201600201600281819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff160217905550505b505050565b600060025482426040516020018083805190602001908083835b602083106114c457805182526020820191506020810190506020830392506114a1565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040528051906020012060001c8161151057fe5b069050919050565b6000600160066040518060c00160405280868152602001858152602001600061ffff168152602001600061ffff168152602001600163ffffffff168152602001600063ffffffff168152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906115aa929190611908565b506020820151816001015560408201518160020160006101000a81548161ffff021916908361ffff16021790555060608201518160020160026101000a81548161ffff021916908361ffff16021790555060808201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160020160086101000a81548163ffffffff021916908363ffffffff1602179055505050039050336007600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116f36001600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461182a90919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061174c600160055461182a90919063ffffffff16565b6005819055507fa6d701777246a1c406210d4b4af8683b00ad9a41b469546e5fb3e91c5e65808c8184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156117c25780820151818401526020810190506117a7565b50505050905090810190601f1680156117ef5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b60008160020160089054906101000a900463ffffffff1663ffffffff164210159050919050565b60008082840190508381101561183c57fe5b8091505092915050565b62015180600354420163ffffffff168161185c57fe5b066003544201038160020160086101000a81548163ffffffff021916908363ffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106118c957803560ff19168380011785556118f7565b828001600101855582156118f7579182015b828111156118f65782358255916020019190600101906118db565b5b5090506119049190611988565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061194957805160ff1916838001178555611977565b82800160010185558215611977579182015b8281111561197657825182559160200191906001019061195b565b5b5090506119849190611988565b5090565b6119aa91905b808211156119a657600081600090555060010161198e565b5090565b9056fe596f7572206c6576656c206973206e6f7420656e6f7567682c20706c65617365207570677261646521a265627a7a72315820aa77956602152e0f820c2ae200f723dbda62e9f757cac54295585e0d232f5e6664736f6c63430005100032",
  "sourceMap": "81:537:2:-;;;194:2:1;180:16;;225:6;;220:2;:11;202:29;;263:9;237:35;;301:10;278:33;;341:1;318:24;;146:11:3;121:36;;509:10:10;501:5;;:18;;;;;;;;;;;;;;;;;;81:537:2;;;;;;",
  "deployedSourceMap": "81:537:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;561:156:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;561:156:3;;;;;;;;;;;;;;;;;:::i;:::-;;1991:413:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1991:413:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1991:413:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1991:413:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1991:413:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1991:413:1;;;;;;;;;;;;;;;:::i;:::-;;648:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;648:43:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;648:43:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;278:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;278:33:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;237:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:35:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;883:132:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;883:132:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;883:132:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1594:370:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1594:370:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1594:370:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1594:370:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1594:370:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1594:370:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1594:370:1;;;;;;;;;;;;;;;:::i;:::-;;2463:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2463:87:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2463:87:1;;;;;;;;;;;;;;;;;:::i;:::-;;318:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;318:24:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;237:28:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:28:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1021:403:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1021:403:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1021:403:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1021:403:3;;;;;;;;;;;;;;;;;723:154;;8:9:-1;5:2;;;30:1;27;20:12;5:2;723:154:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;723:154:3;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;723:154:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;723:154:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;723:154:3;;;;;;;;;;;;:::i;:::-;;121:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;121:36:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;625:17:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;625:17:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;625:17:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;625:17:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;469:86:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;469:86:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;469:86:3;;;;;;;;;;;;;;;;;:::i;:::-;;824:42:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;824:42:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;824:42:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;856:204:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;856:204:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;856:204:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;120:496:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;120:496:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;120:496:2;;;;;;;;;;;;;;;;;:::i;:::-;;561:156:3;638:10;;625:9;:23;;617:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;690:4;695:6;690:12;;;;;;;;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;561:156;:::o;1991:413:1:-;2140:1;2114:13;:25;2128:10;2114:25;;;;;;;;;;;;;;;;:27;2106:36;;;;;;2217:8;;2204:9;:21;;2196:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2267:14;2284:24;2302:5;2284:17;:24::i;:::-;2267:41;;2359:1;2354:2;2342:9;:14;;;;;;2330:9;:26;:30;2318:42;;2370:27;2380:5;2387:9;2370;:27::i;:::-;1991:413;;:::o;648:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;278:33::-;;;;:::o;237:35::-;;;;:::o;883:132:3:-;945:2;949:6;285;263:4;268:6;263:12;;;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;:28;;;;255:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;969:6;426:10;:18;437:6;426:18;;;;;;;;;;;;;;;;;;;;;412:32;;:10;:32;;;404:41;;;;;;1005:3;986:4;991:6;986:12;;;;;;;;;;;;;;;;;;:16;;:22;;;;347:1;883:132;;;;:::o;1594:370:1:-;1750:1;1721:13;:25;1735:10;1721:25;;;;;;;;;;;;;;;;:30;1713:39;;;;;;1762:14;1779:24;1797:5;1779:17;:24::i;:::-;1762:41;;1917:2;1905:9;:14;;;;;;1893:9;:26;1881:38;;1930:27;1940:5;1947:9;1930;:27::i;:::-;1594:370;;:::o;2463:87::-;654:5:10;;;;;;;;;;;640:19;;:10;:19;;;632:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2538:5:1;2527:8;:16;;;;2463:87;:::o;318:24::-;;;;:::o;237:28:10:-;;;;;;;;;;;;;:::o;1021:403:3:-;1082:13;1106:20;1140:13;:21;1154:6;1140:21;;;;;;;;;;;;;;;;1129:33;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1129:33:3;;;;1106:56;;1172:12;1187:1;1172:16;;1202:6;1209:1;1202:8;;1198:197;1214:4;:11;;;;1212:1;:13;1198:197;;;1264:6;1247:23;;:10;:13;1258:1;1247:13;;;;;;;;;;;;;;;;;;;;;:23;;;1244:141;;;1341:1;1323:6;1330:7;1323:15;;;;;;;;;;;;;:19;;;;;1360:10;;;;;;;1244:141;1226:3;;;;;;;1198:197;;;;1411:6;1404:13;;;;1021:403;;;:::o;723:154::-;802:1;805:6;285;263:4;268:6;263:12;;;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;:28;;;;255:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;825:6;426:10;:18;437:6;426:18;;;;;;;;;;;;;;;;;;;;;412:32;;:10;:32;;;404:41;;;;;;862:8;;842:4;847:6;842:12;;;;;;;;;;;;;;;;;;:17;;:28;;;;;;;:::i;:::-;;347:1;723:154;;;;;:::o;121:36::-;;;;:::o;625:17:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;469:86:3:-;654:5:10;;;;;;;;;;;640:19;;:10;:19;;;632:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:4:3;531:10;:17;;;;469:86;:::o;824:42:1:-;;;;;;;;;;;;;;;;;:::o;856:204:10:-;654:5;;;;;;;;;;;640:19;;:10;:19;;;632:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;960:1;940:22;;:8;:22;;;;932:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1024:8;996:37;;1017:5;;;;;;;;;;;996:37;;;;;;;;;;;;1047:8;1039:5;;:16;;;;;;;;;;;;;;;;;;856:204;:::o;120:496:2:-;166:6;426:10:3;:18;437:6;426:18;;;;;;;;;;;;;;;;;;;;;412:32;;:10;:32;;;404:41;;;;;;183:17:2;203:4;208:6;203:12;;;;;;;;;;;;;;;;;;183:32;;233:15;242:5;233:8;:15::i;:::-;225:24;;;;;;282:27;307:1;282:12;:20;295:6;282:20;;;;;;;;;;;;:24;;:27;;;;:::i;:::-;259:12;:20;272:6;259:20;;;;;;;;;;;:50;;;;319:23;336:5;319:16;:23::i;:::-;440:1;437;416:12;:20;429:6;416:20;;;;;;;;;;;;:22;;;;;;:25;412:198;;;575:4;580:6;575:12;;;;;;;;;;;;;;;;;;:21;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;412:198;455:1:3;120:496:2;;:::o;953:169:1:-;1023:4;1105:10;;1077:5;1084:15;1060:40;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1060:40:1;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1060:40:1;;;1050:51;;;;;;1045:57;;:70;;;;;;1038:77;;953:169;;;:::o;1145:420::-;1219:7;1276:1;1229:4;1239:33;;;;;;;;1243:5;1239:33;;;;1250:9;1239:33;;;;1261:1;1239:33;;;;;;1264:1;1239:33;;;;;;1267:1;1239:33;;;;;;1270:1;1239:33;;;;;1229:44;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1229:44:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:48;1219:58;;1399:10;1382;:14;1393:2;1382:14;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;1447:32;1477:1;1447:13;:25;1461:10;1447:25;;;;;;;;;;;;;;;;:29;;:32;;;;:::i;:::-;1419:13;:25;1433:10;1419:25;;;;;;;;;;;;;;;:60;;;;1500:15;1513:1;1500:8;;:12;;:15;;;;:::i;:::-;1489:8;:26;;;;1530:28;1537:2;1541:5;1548:9;1530:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1530:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1145:420;;;:::o;1606:121:3:-;1665:4;1706;:14;;;;;;;;;;;;1687:33;;:15;:33;;1680:40;;1606:121;;;:::o;1008:129:11:-;1066:7;1081:9;1097:1;1093;:5;1081:17;;1116:1;1111;:6;;1104:14;;;;1131:1;1124:8;;;1008:129;;;;:::o;1430:170:3:-;1587:6;1574:11;;1556:15;:29;1549:44;;;;;;;;1534:11;;1516:15;:29;1509:84;1492:4;:14;;;:101;;;;;;;;;;;;;;;;;;1430:170;:::o;81:537:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.12;\n\n// import \"./safemath.sol\";\nimport \"./CatHelper.sol\";\n\ncontract CatFeeding is CatHelper{\n\n    function feed(uint _catId) public onlyOwnerOf(_catId){\n        Cat storage myCat = cats[_catId];\n        require(_isReady(myCat));\n        catFeedTimes[_catId] = catFeedTimes[_catId].add(1);\n        _triggerCooldown(myCat);\n        // every 10 times of feeding will produce a new cat\n        if (catFeedTimes[_catId]%1==0){ \n            //  change  to 1 for debugging\n            // turn the last digit of dna to 8 to mark the feeding new cat\n            cats[_catId].hairBall ++;\n        }\n    }\n}\n\n",
  "sourcePath": "C:\\Users\\liyh1\\Desktop\\patronus\\contracts\\CatFeeding.sol",
  "ast": {
    "absolutePath": "project:/contracts/CatFeeding.sol",
    "exportedSymbols": {
      "CatFeeding": [
        349
      ]
    },
    "id": 350,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 294,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "project:/contracts/CatHelper.sol",
        "file": "./CatHelper.sol",
        "id": 295,
        "nodeType": "ImportDirective",
        "scope": 350,
        "sourceUnit": 623,
        "src": "54:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 296,
              "name": "CatHelper",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 622,
              "src": "104:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CatHelper_$622",
                "typeString": "contract CatHelper"
              }
            },
            "id": 297,
            "nodeType": "InheritanceSpecifier",
            "src": "104:9:2"
          }
        ],
        "contractDependencies": [
          292,
          622,
          1719
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 349,
        "linearizedBaseContracts": [
          349,
          622,
          292,
          1719
        ],
        "name": "CatFeeding",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "173:443:2",
              "statements": [
                {
                  "assignments": [
                    306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 306,
                      "name": "myCat",
                      "nodeType": "VariableDeclaration",
                      "scope": 347,
                      "src": "183:17:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Cat_$100_storage_ptr",
                        "typeString": "struct CatFactory.Cat"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 305,
                        "name": "Cat",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 100,
                        "src": "183:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Cat_$100_storage_ptr",
                          "typeString": "struct CatFactory.Cat"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 310,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 307,
                      "name": "cats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "203:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Cat_$100_storage_$dyn_storage",
                        "typeString": "struct CatFactory.Cat storage ref[] storage ref"
                      }
                    },
                    "id": 309,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 308,
                      "name": "_catId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "208:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "203:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Cat_$100_storage",
                      "typeString": "struct CatFactory.Cat storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "183:32:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 313,
                            "name": "myCat",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 306,
                            "src": "242:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Cat_$100_storage_ptr",
                              "typeString": "struct CatFactory.Cat storage pointer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Cat_$100_storage_ptr",
                              "typeString": "struct CatFactory.Cat storage pointer"
                            }
                          ],
                          "id": 312,
                          "name": "_isReady",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 562,
                          "src": "233:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Cat_$100_storage_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct CatFactory.Cat storage pointer) view returns (bool)"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "233:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1835,
                        1836
                      ],
                      "referencedDeclaration": 1835,
                      "src": "225:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "225:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 316,
                  "nodeType": "ExpressionStatement",
                  "src": "225:24:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 317,
                        "name": "catFeedTimes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "259:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 319,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 318,
                        "name": "_catId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "272:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "259:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "307:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 320,
                            "name": "catFeedTimes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "282:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 322,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 321,
                            "name": "_catId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 299,
                            "src": "295:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "282:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1816,
                        "src": "282:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "282:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "259:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "259:50:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 329,
                        "name": "myCat",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "336:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Cat_$100_storage_ptr",
                          "typeString": "struct CatFactory.Cat storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Cat_$100_storage_ptr",
                          "typeString": "struct CatFactory.Cat storage pointer"
                        }
                      ],
                      "id": 328,
                      "name": "_triggerCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 548,
                      "src": "319:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Cat_$100_storage_ptr_$returns$__$",
                        "typeString": "function (struct CatFactory.Cat storage pointer)"
                      }
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "319:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "319:23:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 332,
                          "name": "catFeedTimes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "416:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 334,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 333,
                          "name": "_catId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 299,
                          "src": "429:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "416:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "437:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "416:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "440:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "416:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 346,
                  "nodeType": "IfStatement",
                  "src": "412:198:2",
                  "trueBody": {
                    "id": 345,
                    "nodeType": "Block",
                    "src": "442:168:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "575:24:2",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 339,
                                "name": "cats",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 103,
                                "src": "575:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Cat_$100_storage_$dyn_storage",
                                  "typeString": "struct CatFactory.Cat storage ref[] storage ref"
                                }
                              },
                              "id": 341,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 340,
                                "name": "_catId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 299,
                                "src": "580:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "575:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Cat_$100_storage",
                                "typeString": "struct CatFactory.Cat storage ref"
                              }
                            },
                            "id": 342,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "hairBall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 91,
                            "src": "575:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 344,
                        "nodeType": "ExpressionStatement",
                        "src": "575:24:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 348,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 302,
                    "name": "_catId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 299,
                    "src": "166:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 303,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 301,
                  "name": "onlyOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 390,
                  "src": "154:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "154:19:2"
              }
            ],
            "name": "feed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 299,
                  "name": "_catId",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "134:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "134:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "133:13:2"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "173:0:2"
            },
            "scope": 349,
            "src": "120:496:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 350,
        "src": "81:537:2"
      }
    ],
    "src": "0:620:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/CatFeeding.sol",
      "exportedSymbols": {
        "CatFeeding": [
          349
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".12"
          ]
        },
        "id": 294,
        "name": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "attributes": {
          "SourceUnit": 623,
          "absolutePath": "project:/contracts/CatHelper.sol",
          "file": "./CatHelper.sol",
          "scope": 350,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 295,
        "name": "ImportDirective",
        "src": "54:25:2"
      },
      {
        "attributes": {
          "contractDependencies": [
            292,
            622,
            1719
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            349,
            622,
            292,
            1719
          ],
          "name": "CatFeeding",
          "scope": 350
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "CatHelper",
                  "referencedDeclaration": 622,
                  "type": "contract CatHelper"
                },
                "id": 296,
                "name": "UserDefinedTypeName",
                "src": "104:9:2"
              }
            ],
            "id": 297,
            "name": "InheritanceSpecifier",
            "src": "104:9:2"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "feed",
              "scope": 349,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_catId",
                      "scope": 348,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 298,
                        "name": "ElementaryTypeName",
                        "src": "134:4:2"
                      }
                    ],
                    "id": 299,
                    "name": "VariableDeclaration",
                    "src": "134:11:2"
                  }
                ],
                "id": 300,
                "name": "ParameterList",
                "src": "133:13:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 304,
                "name": "ParameterList",
                "src": "173:0:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 390,
                      "type": "modifier (uint256)",
                      "value": "onlyOwnerOf"
                    },
                    "id": 301,
                    "name": "Identifier",
                    "src": "154:11:2"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 299,
                      "type": "uint256",
                      "value": "_catId"
                    },
                    "id": 302,
                    "name": "Identifier",
                    "src": "166:6:2"
                  }
                ],
                "id": 303,
                "name": "ModifierInvocation",
                "src": "154:19:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        306
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "myCat",
                          "scope": 347,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct CatFactory.Cat",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Cat",
                              "referencedDeclaration": 100,
                              "type": "struct CatFactory.Cat"
                            },
                            "id": 305,
                            "name": "UserDefinedTypeName",
                            "src": "183:3:2"
                          }
                        ],
                        "id": 306,
                        "name": "VariableDeclaration",
                        "src": "183:17:2"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct CatFactory.Cat storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 103,
                              "type": "struct CatFactory.Cat storage ref[] storage ref",
                              "value": "cats"
                            },
                            "id": 307,
                            "name": "Identifier",
                            "src": "203:4:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 299,
                              "type": "uint256",
                              "value": "_catId"
                            },
                            "id": 308,
                            "name": "Identifier",
                            "src": "208:6:2"
                          }
                        ],
                        "id": 309,
                        "name": "IndexAccess",
                        "src": "203:12:2"
                      }
                    ],
                    "id": 310,
                    "name": "VariableDeclarationStatement",
                    "src": "183:32:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                1835,
                                1836
                              ],
                              "referencedDeclaration": 1835,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 311,
                            "name": "Identifier",
                            "src": "225:7:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Cat_$100_storage_ptr",
                                      "typeString": "struct CatFactory.Cat storage pointer"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 562,
                                  "type": "function (struct CatFactory.Cat storage pointer) view returns (bool)",
                                  "value": "_isReady"
                                },
                                "id": 312,
                                "name": "Identifier",
                                "src": "233:8:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 306,
                                  "type": "struct CatFactory.Cat storage pointer",
                                  "value": "myCat"
                                },
                                "id": 313,
                                "name": "Identifier",
                                "src": "242:5:2"
                              }
                            ],
                            "id": 314,
                            "name": "FunctionCall",
                            "src": "233:15:2"
                          }
                        ],
                        "id": 315,
                        "name": "FunctionCall",
                        "src": "225:24:2"
                      }
                    ],
                    "id": 316,
                    "name": "ExpressionStatement",
                    "src": "225:24:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 115,
                                  "type": "mapping(uint256 => uint256)",
                                  "value": "catFeedTimes"
                                },
                                "id": 317,
                                "name": "Identifier",
                                "src": "259:12:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 299,
                                  "type": "uint256",
                                  "value": "_catId"
                                },
                                "id": 318,
                                "name": "Identifier",
                                "src": "272:6:2"
                              }
                            ],
                            "id": 319,
                            "name": "IndexAccess",
                            "src": "259:20:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 1816,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 115,
                                          "type": "mapping(uint256 => uint256)",
                                          "value": "catFeedTimes"
                                        },
                                        "id": 320,
                                        "name": "Identifier",
                                        "src": "282:12:2"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 299,
                                          "type": "uint256",
                                          "value": "_catId"
                                        },
                                        "id": 321,
                                        "name": "Identifier",
                                        "src": "295:6:2"
                                      }
                                    ],
                                    "id": 322,
                                    "name": "IndexAccess",
                                    "src": "282:20:2"
                                  }
                                ],
                                "id": 323,
                                "name": "MemberAccess",
                                "src": "282:24:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 324,
                                "name": "Literal",
                                "src": "307:1:2"
                              }
                            ],
                            "id": 325,
                            "name": "FunctionCall",
                            "src": "282:27:2"
                          }
                        ],
                        "id": 326,
                        "name": "Assignment",
                        "src": "259:50:2"
                      }
                    ],
                    "id": 327,
                    "name": "ExpressionStatement",
                    "src": "259:50:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Cat_$100_storage_ptr",
                                  "typeString": "struct CatFactory.Cat storage pointer"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 548,
                              "type": "function (struct CatFactory.Cat storage pointer)",
                              "value": "_triggerCooldown"
                            },
                            "id": 328,
                            "name": "Identifier",
                            "src": "319:16:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 306,
                              "type": "struct CatFactory.Cat storage pointer",
                              "value": "myCat"
                            },
                            "id": 329,
                            "name": "Identifier",
                            "src": "336:5:2"
                          }
                        ],
                        "id": 330,
                        "name": "FunctionCall",
                        "src": "319:23:2"
                      }
                    ],
                    "id": 331,
                    "name": "ExpressionStatement",
                    "src": "319:23:2"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "%",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 115,
                                      "type": "mapping(uint256 => uint256)",
                                      "value": "catFeedTimes"
                                    },
                                    "id": 332,
                                    "name": "Identifier",
                                    "src": "416:12:2"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 299,
                                      "type": "uint256",
                                      "value": "_catId"
                                    },
                                    "id": 333,
                                    "name": "Identifier",
                                    "src": "429:6:2"
                                  }
                                ],
                                "id": 334,
                                "name": "IndexAccess",
                                "src": "416:20:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 335,
                                "name": "Literal",
                                "src": "437:1:2"
                              }
                            ],
                            "id": 336,
                            "name": "BinaryOperation",
                            "src": "416:22:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 337,
                            "name": "Literal",
                            "src": "440:1:2"
                          }
                        ],
                        "id": 338,
                        "name": "BinaryOperation",
                        "src": "416:25:2"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "++",
                                  "prefix": false,
                                  "type": "uint16"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "hairBall",
                                      "referencedDeclaration": 91,
                                      "type": "uint16"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct CatFactory.Cat storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 103,
                                              "type": "struct CatFactory.Cat storage ref[] storage ref",
                                              "value": "cats"
                                            },
                                            "id": 339,
                                            "name": "Identifier",
                                            "src": "575:4:2"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 299,
                                              "type": "uint256",
                                              "value": "_catId"
                                            },
                                            "id": 340,
                                            "name": "Identifier",
                                            "src": "580:6:2"
                                          }
                                        ],
                                        "id": 341,
                                        "name": "IndexAccess",
                                        "src": "575:12:2"
                                      }
                                    ],
                                    "id": 342,
                                    "name": "MemberAccess",
                                    "src": "575:21:2"
                                  }
                                ],
                                "id": 343,
                                "name": "UnaryOperation",
                                "src": "575:24:2"
                              }
                            ],
                            "id": 344,
                            "name": "ExpressionStatement",
                            "src": "575:24:2"
                          }
                        ],
                        "id": 345,
                        "name": "Block",
                        "src": "442:168:2"
                      }
                    ],
                    "id": 346,
                    "name": "IfStatement",
                    "src": "412:198:2"
                  }
                ],
                "id": 347,
                "name": "Block",
                "src": "173:443:2"
              }
            ],
            "id": 348,
            "name": "FunctionDefinition",
            "src": "120:496:2"
          }
        ],
        "id": 349,
        "name": "ContractDefinition",
        "src": "81:537:2"
      }
    ],
    "id": 350,
    "name": "SourceUnit",
    "src": "0:620:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-13T03:40:52.046Z",
  "devdoc": {
    "methods": {
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}